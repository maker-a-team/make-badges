{"version":3,"sources":["logo-white.svg","serviceWorker.js","routes.js","Components/Header.js","Components/Footer.js","Components/LandingPage.js","Components/Session/context.js","Components/Firebase/context.js","Components/Firebase/firebase.js","Components/Firebase/index.js","Components/Session/withAuthentication.js","Components/Session/withAuthorization.js","Components/Session/withEmailVerification.js","Components/Authentication/SignOut.js","Components/AccountPage.js","Components/NotFoundPage.js","Components/Badges/BadgeItem.js","Components/Badges/BadgeList.js","Components/Badges/BadgeDetails.js","Components/Badges/CreateBadgeForm.js","Components/UploadPage.js","Components/Badges/index.js","Components/Authentication/PasswordForget.js","Components/Authentication/SignIn.js","Components/Authentication/SignUp.js","Components/Authentication/PasswordChange.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","BADGES","Header","id","href","src","logo","alt","className","activeClassName","exact","to","r","Footer","curr_year","Date","getFullYear","Component","AuthUserContext","React","createContext","FirebaseContext","withFirebase","props","Consumer","firebase","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","analytics","logEvent","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doSendEmailVerification","sendEmailVerification","url","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","emailVerified","providerData","db","ref","users","badge","badges","doAwardBadge","userID","userName","badgeID","badgeName","console","log","child","set","doAnalyzeNotification","app","initializeApp","this","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","storage","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","withAuthentication","WithAuthentication","state","JSON","parse","localStorage","getItem","listener","setItem","stringify","setState","removeItem","Provider","value","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","withEmailVerification","WithEmailVerification","onSendEmailVerification","isSent","map","provider","providerId","includes","needsEmailVerification","Button","type","onClick","disabled","icon","faSignOutAlt","width","height","username","awardsEarned","SignOut","NotFoundPage","style","textAlign","BadgeItem","onToggleEditMode","editMode","editBadgeCategory","category","editBadgeDescription","description","editBadgeImage","image","editBadgeLink","link","editBadgeName","name","onChangeEditBadge","event","target","onSaveEditBadge","onEditBadge","onRemoveBadge","key","placeholder","onChange","pathname","editedAt","ownerID","faEdit","faTrash","BadgeList","badgeSnapshot","TIMESTAMP","remove","loading","on","badgesObject","badgesList","Object","keys","off","onSubmit","BADGE_ID","AwardEarned","preventDefault","onChangeCheckbox","checked","params","CreateBadgeForm","onListenForBadges","orderByChild","limitToLast","limit","badgeObject","badgeList","onCreateBadge","createdAt","companyID","onNextPage","ImageUpload","handleChange","e","files","handleUpload","put","progress","Math","round","bytesTransferred","totalBytes","error","getDownloadURL","max","BadgesPage","path","component","BadgeDetails","INITIAL_STATE","PasswordForgetFormBase","catch","isInvalid","autoComplete","message","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","ERROR_MSG_ACCOUNT_EXISTS","SignInFormBase","SignInGoogleBase","socialAuthUser","displayName","code","SignInFacebookBase","additionalUserInfo","profile","SignInTwitterBase","SignInLink","SignInForm","SignInGoogle","SignInPage","passwordOne","passwordTwo","isAdmin","SignUpFormBase","updateProfile","validate","test","String","toLowerCase","validEmail","SignUpLink","SignUpForm","SignUpPage","PasswordChangeForm","hidden","AccountPage","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.617d63de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-white.759f6c70.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const SIGN_OUT = '/signout';\nexport const ABOUT = '/about';\nexport const ACCOUNT = '/account';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const PASSWORD_RESSET = '/pw-reset';\n\nexport const BADGES = '/badges';\nexport const BADGE_DETAILS = '/badges/:id';\nexport const CREATE_BADGE = '/badges/new';\nexport const CREATE_BADGE_PHOTO = '/badges/new-photo';\nexport const AWARD_BADGE = '/award-badge';","// src/Header/Title.js\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport logo from \"../logo-white.svg\";\nimport * as r from '../routes';\n\nfunction Header() {\n  return (\n    <header id=\"Header\">\n      <a href=\"https://makeschool.com/portal\">\n        <img src={logo} id=\"nav-logo\" alt=\"logo\" />\n      </a>\n\n      <div id=\"nav-items\">\n        <NavLink\n          className=\"nav-link\"\n          activeClassName=\"nav-link-active\"\n          exact\n          to={r.BADGES}\n        >\n          Badges\n        </NavLink>\n\n        <NavLink\n          className=\"nav-link\"\n          activeClassName=\"nav-link-active\"\n          exact\n          to={r.ACCOUNT}\n        >\n          Account\n        </NavLink>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","// src/Footer/Footer.js\nimport React from \"react\";\n\nfunction Footer() {\n  var curr_year = new Date().getFullYear();\n\n  return (\n    <footer id=\"Footer\">\n      <h3>Make School A-Team Copyright {curr_year}</h3>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BADGES } from \"../routes\";\n\nclass LandingPage extends Component {\n  render() {\n    return (\n      <div id=\"content-wrap\" className=\"LandingPage\">\n        <h1>Welcome To Make Badges</h1>\n        <p>\n          First Project of the Make School A-Team to provide achievement\n          awards/badges to students to help gain interest in a variety of\n          topics.\n        </p>\n\n        <Link to={BADGES}>\n          <button>Go To The Badge Wall</button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\nimport 'firebase/analytics';\n\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY || \"AIzaSyBpxbPor7YSFc5J6q0lw79CVXYYAjLvlos\",\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN || \"makeschoolbadges.firebaseapp.com\",\n  databaseURL: process.env.REACT_APP_DATABASE_URL || \"https://makeschoolbadges.firebaseio.com\",\n  projectId: process.env.REACT_APP_PROJECT_ID || \"makeschoolbadges\",\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET || \"makeschoolbadges.appspot.com\",\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID || \"360872796104\",\n  appId: process.env.REACT_APP_APP_ID || \"1:360872796104:web:7692a1e1e0c89e77c16afd\",\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID || \"G-0F7RZM57QH\",\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    /* Helper */\n    this.serverValue = app.database.ServerValue;\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n\n    /* Firebase APIs */\n    this.auth = app.auth();\n    this.db = app.database();\n    this.storage = app.storage();\n    this.analytics = app.analytics();\n\n    /* Social Sign In Method Provider */\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\n  }\n\n  // *** Auth API ***\n  doCreateUserWithEmailAndPassword = (email, password) => {\n    this.analytics.logEvent(\"Created A New User Using Email & Pass\");\n    return this.auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  doSignInWithEmailAndPassword = (email, password) => {\n    this.analytics.logEvent(\"User Logged In Using Email & Pass\");\n    return this.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  doSignInWithGoogle = () => {\n    this.analytics.logEvent(\"User Logged In Using Google\");\n    return this.auth.signInWithPopup(this.googleProvider);\n  }\n\n  doSignInWithFacebook = () => this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignInWithTwitter = () => this.auth.signInWithPopup(this.twitterProvider);\n\n  doSignOut = () => {\n    this.analytics.logEvent(\"User Logged Out\");\n    return this.auth.signOut();\n  }\n\n  doPasswordReset = (email) => {\n    this.analytics.logEvent(\"User Tried To Rest Their Password\");\n    return this.auth.sendPasswordResetEmail(email);\n  }\n\n  doPasswordUpdate = (password) => {\n    this.analytics.logEvent(\"User Changed Their Password\");\n    return this.auth.currentUser.updatePassword(password);\n  }\n\n  doSendEmailVerification = () =>{\n    this.analytics.logEvent(\"Email Verification Sent\");\n    return this.auth.currentUser.sendEmailVerification({\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT || \"http://localhost:3000/\",\n    });\n  }\n\n  // *** Merge Auth and DB User API *** //\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged((authUser) => {\n      // console.log(authUser)\n      if (authUser) {\n        this.user(authUser.uid)\n          .once(\"value\")\n          .then((snapshot) => {\n            const dbUser = snapshot.val();\n\n            // default empty roles\n            if (!dbUser.roles) {\n              dbUser.roles = {};\n            }\n\n            // merge auth and db user\n            authUser = {\n              uid: authUser.uid,\n              email: authUser.email,\n              emailVerified: authUser.emailVerified,\n              providerData: authUser.providerData,\n              ...dbUser,\n            };\n\n            next(authUser);\n          });\n      } else {\n        fallback();\n      }\n    });\n\n  // *** User API ***\n  user = (uid) => {\n    this.analytics.logEvent(\"Referencing A User's Data\");\n    return this.db.ref(`users/${uid}`);\n  }\n  users = () => {\n    this.analytics.logEvent(\"Referencing List Of Users\");\n    this.db.ref(\"users\");\n  }\n\n  // *** Badge API ***\n  badge = (uid) => {\n    this.analytics.logEvent(\"Referencing A Badge's Data\");\n    return this.db.ref(`badges/${uid}`);\n  }\n  badges = () => {\n    this.analytics.logEvent(\"Referencing List Of Badges\");\n    return this.db.ref(\"badges\");\n  }\n\n  doAwardBadge = (userID, userName, badgeID, badgeName) => {\n    console.log(`User: ${userID} Submitted a Badge Request for ${badgeName} ID: ${badgeID}`);\n\n    return this.db\n      .ref(\"users/\" + userID + \"/badges/\")\n      .child(badgeName)\n      .set(badgeID);\n    // this.badge(badgeID).child(\"winners\").child(userName).set(userID);\n    // this.db.ref('badges/' + badgeID + '/winners/').child(userName).set({userID});\n  };\n\n  // *** Analytics API ****\n  doAnalyzeNotification = () => this.analytics.logEvent(\"notification_received\");\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: JSON.parse(localStorage.getItem('authUser')),\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          localStorage.setItem('authUser', JSON.stringify(authUser));\n          this.setState({ authUser });\n        },\n        () => {\n          localStorage.removeItem('authUser');\n          this.setState({ authUser: null });\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport { LANDING, SIGN_IN } from '../../routes';\n\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(LANDING);\n          }\n        },\n        () => this.props.history.push(SIGN_IN),\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport Button from 'react-bootstrap/Button';\n\nconst needsEmailVerification = (authUser) =>\n  authUser &&\n  !authUser.emailVerified &&\n  authUser.providerData\n    .map((provider) => provider.providerId)\n    .includes('password');\n\nconst withEmailVerification = (Component) => {\n  class WithEmailVerification extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = { isSent: false };\n    }\n\n    onSendEmailVerification = () => {\n      this.props.firebase\n        .doSendEmailVerification()\n        .then(() => this.setState({ isSent: true }));\n    };\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {(authUser) =>\n            needsEmailVerification(authUser) ? (\n              <div>\n                {this.state.isSent ? (\n                  <p>\n                    E-Mail confirmation sent: Check your E-Mails (Spam\n                    folder included) for a confirmation E-Mail.\n                    Refresh this page once you confirmed your E-Mail.\n                  </p>\n                ) : (\n                  <p>\n                    Verify your E-Mail: Check your E-Mails (Spam\n                    folder included) for a confirmation E-Mail or send\n                    another confirmation E-Mail.\n                  </p>\n                )}\n\n                <Button\n                  type=\"button btn-primary\"\n                  onClick={this.onSendEmailVerification}\n                  disabled={this.state.isSent}\n                >\n                  Send confirmation E-Mail\n                </Button>\n              </div>\n            ) : (\n              <Component {...this.props} />\n            )\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return withFirebase(WithEmailVerification);\n};\n\nexport default withEmailVerification;\n","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst SignOutButton = ({ firebase }) => (\n  <button\n    type=\"button\"\n    className=\"btn btn-primary nav-item nav-link\"\n    onClick={firebase.doSignOut}\n  >\n    <FontAwesomeIcon icon={faSignOutAlt} />\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","// src/components/AccountPage\nimport React from \"react\";\nimport { compose } from \"recompose\";\n\nimport {\n  AuthUserContext,\n  withAuthorization,\n  withEmailVerification,\n} from \"./Session\";\n\n// import LoginManagement from \"../Authentication/LoginManagement\";\n// import { PasswordForgetForm } from '../Authentication/PasswordForget';\n// import PasswordChangeForm from \"../Authentication/PasswordChange\";\nimport SignOutButton from \"./Authentication/SignOut\";\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {(authUser) => (\n      <div id=\"content-wrap\" className=\"AccountPage\">\n        <div className=\"usercard\">\n          <img\n            className=\"profile-photo\"\n            src={\"https://picsum.photos/200\"}\n            width=\"100\"\n            height=\"100\"\n            alt=\"Profile\"\n          />\n          <h3>{authUser.username}'s Account</h3>\n          <p>\n            <strong>Email: </strong>\n            {authUser.email}\n            <br />\n          </p>\n          <p>\n            <strong>Awards: </strong>\n            <br />\n            {JSON.stringify(authUser.awardsEarned)}\n            <br />\n          </p>\n        </div>\n        <hr />\n        {/* Forgot Your Password? <PasswordForgetForm /> */}\n        {/* Reset Your Password. <PasswordChangeForm /> */}\n        {/* <LoginManagement authUser={authUser} /> */}\n        <SignOutButton />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = (authUser) => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition)\n)(AccountPage);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import PageNotFound from \"../assets/images/PageNotFound\";\n\nclass NotFoundPage extends Component {\n  render() {\n    return (\n      <div id=\"content-wrap\" className=\"NotFoundPage\">\n        {/* <img src={PageNotFound} /> */}\n        <h1>Oops!</h1>\n        <h2>We can't seem to find the page you're looking for.</h2>\n        <p style={{ textAlign: \"center\" }}>\n          <Link to=\"/\">Go to Home </Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default NotFoundPage;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nimport * as r from \"../../routes\";\n\nclass BadgeItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      editBadgeCategory: this.props.badge.category,\n      editBadgeDescription: this.props.badge.description,\n      editBadgeImage: this.props.badge.image,\n      editBadgeLink: this.props.badge.link,\n      editBadgeName: this.props.badge.name,\n    };\n  }\n\n  onToggleEditMode = () => {\n    this.setState((state) => ({\n      editMode: !state.editMode,\n      editBadgeCategory: this.props.badge.category,\n      editBadgeDescription: this.props.badge.description,\n      editBadgeImage: this.props.badge.image,\n      editBadgeLink: this.props.badge.link,\n      editBadgeName: this.props.badge.name,\n    }));\n  };\n\n  onChangeEditBadge = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSaveEditBadge = () => {\n    this.props.onEditBadge(\n      this.props.badge,\n      this.state.editBadgeCategory,\n      this.state.editBadgeDescription,\n      this.state.editBadgeImage,\n      this.state.editBadgeLink,\n      this.state.editBadgeName\n    );\n\n    this.setState({ editMode: false });\n  };\n\n  render() {\n    const { authUser, badge, onRemoveBadge } = this.props;\n    const {\n      editMode,\n      editBadgeCategory,\n      editBadgeDescription,\n      editBadgeImage,\n      editBadgeLink,\n      editBadgeName,\n    } = this.state;\n\n    return (\n      <li className=\"Badge\" key={badge.uid}>\n        {editMode ? (\n          <div className=\"text-center\">\n            <input\n              type=\"text\"\n              className=\"form-control form-input col-10\"\n              placeholder=\"Name Your Badge!\"\n              value={editBadgeName}\n              name=\"editBadgeName\"\n              onChange={this.onChangeEditBadge}\n            />\n            <input\n              type=\"text\"\n              className=\"form-control form-input col-10\"\n              placeholder=\"Badge's Category?\"\n              value={editBadgeCategory}\n              name=\"editBadgeCategory\"\n              onChange={this.onChangeEditBadge}\n            />\n            <input\n              type=\"text\"\n              className=\"form-control form-input col-10\"\n              placeholder=\"Badge's Description?\"\n              value={editBadgeDescription}\n              name=\"editBadgeDescription\"\n              onChange={this.onChangeEditBadge}\n            />\n            <input\n              type=\"text\"\n              className=\"form-control form-input col-10\"\n              placeholder=\"Badge's Image URL?\"\n              value={editBadgeImage}\n              name=\"editBadgeImage\"\n              onChange={this.onChangeEditBadge}\n            />\n            <input\n              type=\"text\"\n              className=\"form-control form-input col-10\"\n              placeholder=\"Badge's Badgr Link?\"\n              value={editBadgeLink}\n              name=\"editBadgeLink\"\n              onChange={this.onChangeEditBadge}\n            />\n          </div>\n        ) : (\n          <div className=\"Badge-info\">\n            <strong>category: </strong> {badge.category}\n            <br />\n            <strong>name: </strong> {badge.name}\n            <br />\n            <strong>description: </strong> {badge.description}\n            <br />\n            <img className=\"Badge-image\" src={badge.image} alt=\"badge\" />\n            <br />\n            <Link\n              to={{\n                pathname: `${r.BADGES}/${badge.uid}`,\n                state: { badge, authUser },\n              }}\n            >\n              Details\n            </Link>\n            <p className=\"comp-item\">\n              <sub>{badge.editedAt && <span>(Edited)</span>}</sub>\n            </p>\n            <hr />\n          </div>\n        )}\n\n        {authUser && authUser.uid === badge.ownerID && (\n          <div className=\"badge-buttons\">\n            {editMode ? (\n              <div className=\"justify-me\">\n                <button\n                  className=\"btn btn-secondary btn-bot\"\n                  onClick={this.onSaveEditBadge}\n                >\n                  Save Changes\n                </button>\n                <button\n                  className=\"btn btn-secondary btn-bot\"\n                  onClick={this.onToggleEditMode}\n                >\n                  Cancel Edit\n                </button>\n              </div>\n            ) : (\n              <div>\n                <button className=\"btn-li\" onClick={this.onToggleEditMode}>\n                  <FontAwesomeIcon icon={faEdit} />\n                </button>\n                <button\n                  className=\"btn-li\"\n                  onClick={() => onRemoveBadge(badge.uid)}\n                >\n                  <FontAwesomeIcon icon={faTrash} />\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n      </li>\n    );\n  }\n}\n\nexport default BadgeItem;\n","import React, { Component } from 'react';\n\nimport { AuthUserContext } from \"../Session\";\nimport { withFirebase } from '../Firebase';\nimport BadgeItem from './BadgeItem';\n\nclass BadgeList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      badges: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.badges().on(\"value\", (snapshot) => {\n      const badgesObject = snapshot.val();\n\n      if (badgesObject) {\n        const badgesList = Object.keys(badgesObject).map((key) => ({\n          ...badgesObject[key],\n          uid: key,\n        }));\n\n        this.setState({\n          badges: badgesList,\n          loading: false,\n        });\n      } else {\n        this.setState({ badges: null, loading: false });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.badges().off();\n  }\n\n  onEditBadge = (badge, category, description, image, link, name) => {\n    const { uid, ...badgeSnapshot } = badge;\n\n    this.props.firebase.badge(badge.uid).set({\n      ...badgeSnapshot,\n      category,\n      description,\n      image,\n      link,\n      name,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n  };\n\n  onRemoveBadge = (uid) => {\n    this.props.firebase.badge(uid).remove();\n  };\n\n  render() {\n    const { badges, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div id=\"content-wrap\" className=\"BadgeListPage\">\n            <h1>Badge List</h1>\n\n            {loading && <div>Loading ...</div>}\n\n            {badges && (\n              <ul className=\"BadgeList\">\n                {badges.map((badge) => (\n                  <BadgeItem\n                    authUser={authUser}\n                    key={badge.uid}\n                    badge={badge}\n                    onEditBadge={this.onEditBadge}\n                    onRemoveBadge={this.onRemoveBadge}\n                  />\n                ))}\n              </ul>\n            )}\n\n            {!badges && <div>There are no badges ...</div>}\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(BadgeList);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nclass BadgeItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      badge: null,\n      AwardEarned: false,\n      BADGE_ID: this.props.match.params.id,\n      authUser: this.props.authUser,\n      ...props.location.state,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.badge) {\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    this.props.firebase.badge(this.state.BADGE_ID).on(\"value\", (snapshot) => {\n      this.setState({\n        badge: snapshot.val(),\n        AwardEarned: false,\n        BADGE_ID: this.props.match.params.id,\n        authUser: this.props.authUser,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.badge(this.state.BADGE_ID).off();\n  }\n\n  onSubmit = (event) => {\n    const { authUser, BADGE_ID, badge } = this.state;\n    \n    this.props.firebase.doAwardBadge(authUser.uid, authUser.userName, BADGE_ID, badge.name)\n    this.setState({ AwardEarned: true });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeCheckbox = (event) => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  render() {\n    const { loading, badge, AwardEarned, authUser } = this.state;\n\n    return (\n      <div id=\"content-wrap\" className=\"BadgeDetailsPage\">\n        {loading && <div>Loading ...</div>}\n\n        {badge && (\n          <div className=\"Badge-info\">\n            <h3>Badge ({this.state.BADGE_ID})</h3>\n            <img className={(AwardEarned && \"Earned\") || \"Badge-image\"} src={badge.image} alt=\"badge\" />\n            <strong>Badge Name:</strong> {badge.name}\n            <br />\n            <strong>Badge Description:</strong> {badge.description}\n            <br />\n            <strong>Badge Category:</strong> {badge.category}\n            <br />\n            <a href={badge.link}>Badgr Page for this Badge</a>\n            <br />\n            <br />\n            <br />\n            Have you earned this award yet:\n            {AwardEarned ? \" Yes\" : \" No\"}\n            {authUser && (\n              <div>\n                <button onClick={this.onSubmit} type=\"submit\">\n                  Earn This Badge\n                </button>\n                <br />\n                <label>\n                  Overide Request:\n                  <input name=\"AwardEarned\" type=\"checkbox\" checked={AwardEarned} onChange={this.onChangeCheckbox} />\n                </label>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(BadgeItem);\n","import React, { Component } from \"react\";\n\nimport { AuthUserContext } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\nimport BadgeList from \"./BadgeList\";\n\nclass CreateBadgeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      loading: false,\n\n      limit: 25,\n      category: \"\",\n      description: \"\",\n      image: \"\",\n      link: \"\",\n      name: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.onListenForBadges();\n  }\n\n  onListenForBadges = () => {\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .badges()\n      .orderByChild(\"createdAt\")\n      .limitToLast(this.state.limit)\n      .on(\"value\", (snapshot) => {\n        const badgeObject = snapshot.val();\n\n        if (badgeObject) {\n          const badgeList = Object.keys(badgeObject).map((key) => ({\n            ...badgeObject[key],\n            uid: key,\n          }));\n\n          this.setState({\n            badges: badgeList,\n            loading: false,\n          });\n        } else {\n          this.setState({ badges: null, loading: false });\n        }\n      });\n  };\n\n  componentWillUnmount() {\n    this.props.firebase.badges().off();\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onCreateBadge = (event, authUser) => {\n    this.props.firebase.badges().push({\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n\n      category: this.state.category,\n      description: this.state.description,\n      image: this.state.image,\n      link: this.state.link,\n      name: this.state.name,\n      ownerID: authUser.uid,\n    });\n\n    this.setState({\n      category: \"\",\n      description: \"\",\n      image: \"\",\n      link: \"\",\n      name: \"\",\n    });\n\n    event.preventDefault();\n  };\n\n  onEditBadge = (badge, category, description, image, link, name) => {\n    const { uid, ...badgeSnapshot } = badge;\n\n    this.props.firebase.badge(this.state.companyID, badge.uid).set({\n      ...badgeSnapshot,\n      category,\n      description,\n      image,\n      link,\n      name,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n  };\n\n  onRemoveBadge = (uid) => {\n    this.props.firebase.badge(uid).remove();\n  };\n\n  onNextPage = () => {\n    this.setState(\n      (state) => ({ limit: state.limit + 5 }),\n      this.onListenForBadges\n    );\n  };\n\n  render() {\n    const {\n      category,\n      description,\n      image,\n      link,\n      name,\n      badges,\n      loading,\n    } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div id=\"content-wrap\" className=\"CreateBadgePage\">\n            <h1>Create A New Badge</h1>\n\n            <form onSubmit={(event) => this.onCreateBadge(event, authUser)}>\n              <div className=\"\">\n                <div className=\"form-group \">\n                  <input\n                    className=\"form-control form-input col-10\"\n                    type=\"text\"\n                    placeholder=\"Badge Name\"\n                    value={name}\n                    name=\"name\"\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    className=\"form-control form-input col-10\"\n                    type=\"text\"\n                    placeholder=\"Badge Category\"\n                    value={category}\n                    name=\"category\"\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    className=\"form-control form-input col-10\"\n                    type=\"text\"\n                    placeholder=\"Badge Description\"\n                    value={description}\n                    name=\"description\"\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    className=\"form-control form-input col-10\"\n                    type=\"text\"\n                    placeholder=\"Badge Link\"\n                    value={link}\n                    name=\"link\"\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    className=\"form-control form-input col-10\"\n                    type=\"text\"\n                    placeholder=\"Badge Image URL\"\n                    value={image}\n                    name=\"image\"\n                    onChange={this.onChange}\n                  />\n                </div>\n              </div>\n\n              <div className=\"text-center\">\n                <button className=\"btn btn-primary\" type=\"submit\">\n                  Add Badge\n                </button>\n              </div>\n            </form>\n\n            {loading && <div>Loading ...</div>}\n\n            {badges && (\n              <BadgeList\n                authUser={authUser}\n                badges={badges}\n                onEditBadge={this.onEditBadge}\n                onRemoveBadge={this.onRemoveBadge}\n              />\n            )}\n\n            {!loading && badges && (\n              <button\n                className=\"btn btn-secondary\"\n                type=\"button\"\n                onClick={this.onNextPage}\n              >\n                Show More\n              </button>\n            )}\n\n            {!badges && <div>There are no badges ...</div>}\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(CreateBadgeForm);\n","import React, { Component } from \"react\";\nimport { withFirebase } from \"./Firebase\";\n\nclass ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: null,\n      url: \"\",\n      progress: 0,\n    };\n  }\n\n  handleChange = (e) => {\n    if (e.target.files[0]) {\n      const image = e.target.files[0];\n      this.setState(() => ({ image }));\n    }\n  };\n\n  handleUpload = () => {\n    const { image } = this.state;\n    const uploadTask = this.props.firebase.storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        // progress function ...\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        this.setState({ progress });\n      },\n      (error) => {\n        // Error function ...\n        console.log(error);\n      },\n      () => {\n        // complete function ...\n        this.props.firebase.storage\n          .ref(\"images\")\n          .child(image.name)\n          .getDownloadURL()\n          .then((url) => {\n            this.setState({ url });\n          });\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"center\">\n        <br />\n        <h2 className=\"green-text\">React Firebase Image Uploader</h2>\n        <br />\n        <br />\n        <div className=\"row\">\n          <progress\n            value={this.state.progress}\n            max=\"100\"\n            className=\"progress\"\n          />\n        </div>\n        <br />\n        <br />\n        <br />\n        <div className=\"file-field input-field\">\n          <div className=\"btn\">\n            <span>File</span>\n            <input type=\"file\" onChange={this.handleChange} />\n          </div>\n          <div className=\"file-path-wrapper\">\n            <input className=\"file-path validate\" type=\"text\" />\n          </div>\n        </div>\n        <button\n          onClick={this.handleUpload}\n          className=\"waves-effect waves-light btn\"\n        >\n          Upload\n        </button>\n        <br />\n        <br />\n        <img\n          src={this.state.url || \"https://via.placeholder.com/400x300\"}\n          alt=\"Uploaded Images\"\n          height=\"300\"\n          width=\"400\"\n        />\n      <span>URL: {this.state.url}</span>\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(ImageUpload);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport * as r from '../../routes';\n\nimport './Badge.css'\nimport BadgeList from \"./BadgeList\";\nimport BadgeDetails from \"./BadgeDetails\";\nimport CreateBadgeForm from \"./CreateBadgeForm\";\nimport ImageUpload from \"../UploadPage\";\n\nimport { withAuthorization, withEmailVerification } from \"../Session\";\n\nconst BadgesPage = () => (\n  <Switch>\n    <Route exact path={r.BADGES} component={BadgeList} />\n    <Route exact path={r.CREATE_BADGE_PHOTO} component={ImageUpload} />\n    <Route exact path={r.CREATE_BADGE} component={CreateBadgeForm} />\n    <Route exact path={r.BADGE_DETAILS} component={BadgeDetails} />\n  </Switch>\n);\n\n// const condition = (authUser) => !!authUser;\n\n// export default compose(\n//   withEmailVerification,\n//   withAuthorization(condition)\n// )(BadgesPage);\n\nexport default BadgesPage;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport { LANDING, PASSWORD_FORGET } from '../../routes';\n\nconst PasswordForgetPage = () => (\n  <div id=\"content-wrap\" className=\"PasswordForgetPage\">\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n    <p>\n      <Link to={LANDING}>Nevermind Go Back</Link>\n    </p>\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          autoComplete=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React, { Component } from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from './SignUp';\nimport { PasswordForgetLink } from './PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport { BADGES, SIGN_IN } from \"../../routes\";\n\nconst SignInPage = () => (\n  <div id=\"content-wrap\">\n    <h1>SignIn</h1>\n    <p>use your @students.makeschool.com, @makeschool.com , or @students.dominican.edu</p>\n    <SignInForm />\n    <SignInGoogle />\n    {/* <SignInFacebook /> */}\n    {/* <SignInTwitter /> */}\n    <PasswordForgetLink />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS =\n  'auth/account-exists-with-different-credential';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with an E-Mail address to\n  this social account already exists. Try to login from\n  this account instead and associate your social accounts on\n  your personal account page.\n`;\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(BADGES);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          autoComplete=\"email\"\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithGoogle()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.user.displayName,\n          email: socialAuthUser.user.email,\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(BADGES);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Google</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInFacebookBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithFacebook()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(BADGES);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Facebook</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInTwitterBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithTwitter()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(BADGES);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Twitter</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInLink = () => (\n  <p>\n    Already have an account? <Link to={SIGN_IN}>Sign In</Link>\n  </p>\n);\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nconst SignInGoogle = compose(\n  withRouter,\n  withFirebase,\n)(SignInGoogleBase);\n\nconst SignInFacebook = compose(\n  withRouter,\n  withFirebase,\n)(SignInFacebookBase);\n\nconst SignInTwitter = compose(\n  withRouter,\n  withFirebase,\n)(SignInTwitterBase);\n\nexport default SignInPage;\n\nexport { SignInLink, SignInForm, SignInGoogle, SignInFacebook, SignInTwitter };\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport { BADGES, SIGN_UP } from '../../routes';\nimport { SignInLink } from './SignIn';\n\nconst SignUpPage = () => (\n  <div id=\"content-wrap\" className=\"SignUpPage\">\n    <h1>SignUp</h1>\n    <SignUpForm />\n    <SignInLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  isAdmin: false,\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with this E-Mail address already exists.\n  Try to login with this account instead. If you think the\n  account is already used from one of the social logins, try\n  to sign in with one of them. Afterward, associate your accounts\n  on your personal account page.\n`;\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { username, email, passwordOne, isAdmin } = this.state;\n    const roles = {};\n\n    if (isAdmin) {\n      roles[\"Priority\"] = \"ADMIN\";\n    } else {\n      roles[\"Priority\"] = \"STUDENT\"\n    }\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(() => {\n        return this.props.firebase.doSendEmailVerification();\n      })\n      .then((authUser) => {\n        authUser.user.updateProfile({\n          displayName: username,\n        });\n        // Create a user in your Firebase realtime database\n        return this.props.firebase.user(authUser.user.uid).set({\n          username,\n          email,\n          roles,\n        });\n      })\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(BADGES);\n      })\n      .catch((error) => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  validate = (email) => {\n    // const expression = /(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)*|\"((([ \\t]*\\r\\n)?[ \\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*(([ \\t]*\\r\\n)?[ \\t]+)?\")@(([a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.)+([a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.?$/i;\n\n    //other regexes that will cause more validation issues\n\n    // const expression = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    // const expression = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n    //const expression = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\n    //simplest ever, but with many false positives\n    // const expression = /\\S+@\\S+/;\n    const makeschoolstaff = /\\S+@makeschool.com/;\n    const makeschool = /\\S+@students.makeschool.com/;\n    const dominican = /\\S+@students.dominican.edu/;\n\n    if (makeschoolstaff.test(String(email).toLowerCase())) {\n      this.isAdmin = true;\n      return true\n    }\n\n    return (\n      makeschool.test(String(email).toLowerCase()) ||\n      dominican.test(String(email).toLowerCase())\n    );\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeCheckbox = (event) => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      // isAdmin,\n      validEmail = this.validate(email),\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      !validEmail ||\n      username === '';\n\n    return (\n      <div>\n        <p>use your @students.makeschool.com, @makeschool.com , or @students.dominican.edu</p>\n\n        <form onSubmit={this.onSubmit}>\n          <input\n            name=\"username\"\n            autoComplete=\"username\"\n            value={username}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"Full Name\"\n          />\n          <input\n            name=\"email\"\n            autoComplete=\"email\"\n            value={email}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"Email Address\"\n          />\n          <input\n            name=\"passwordOne\"\n            autoComplete=\"new-password\"\n            value={passwordOne}\n            onChange={this.onChange}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n          <input\n            name=\"passwordTwo\"\n            autoComplete=\"new-password\"\n            value={passwordTwo}\n            onChange={this.onChange}\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n          />\n          {/* <label>\n            Admin:\n            <input\n              name=\"isAdmin\"\n              type=\"checkbox\"\n              checked={isAdmin}\n              onChange={this.onChangeCheckbox}\n            />\n          </label> */}\n          <button disabled={isInvalid} type=\"submit\">\n            Sign Up\n          </button>\n\n          {error && <p>{error.message}</p>}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = compose(\n  withRouter,\n  withFirebase,\n)(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          hidden={true}\n          name=\"email\"\n          autoComplete=\"email\"\n          value={email}\n          // onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          autoComplete=\"new-password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          autoComplete=\"new-password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","// src/App.js\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport React from \"react\";\nimport * as r from './routes';\nimport \"./App.css\";\n\nimport { Header, Footer, LandingPage, AccountPage, BadgesPage, NotFoundPage } from \"./Components\";\n\nimport {\n  SignUpPage, SignInPage, PasswordForgetPage, PasswordChangeForm, // SignOutButton,\n} from \"./Components/Authentication\";\n\nimport { withAuthentication } from \"../src/Components/Session\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div id=\"page-container\" className=\"App\">\n        <Header />\n\n        <Switch>\n          <Route exact path={r.LANDING}><Redirect to={r.BADGES} /></Route>\n          <Route exact path={r.SIGN_IN} component={SignInPage} />\n          <Route exact path={r.SIGN_UP} component={SignUpPage} />\n          {/* <Route exact path={r.SIGN_OUT} component={SignOutButton} /> */}\n          <Route exact path={r.ACCOUNT} component={AccountPage} />\n          <Route exact path={r.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route exact path={r.PASSWORD_RESSET} component={PasswordChangeForm} />\n          <Route path={r.BADGES} component={BadgesPage} />\n          <Route path=\"*\" component={NotFoundPage} />\n        </Switch>\n\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default withAuthentication(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport Firebase, { FirebaseContext } from \"../src/Components/Firebase\";\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}